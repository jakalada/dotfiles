[include]
  path = .gitconfig.local

[ghq]
  root = ~/ghq

[core]
  editor = vim
  pager = less
  excludesfile = ~/.gitignore.base
  autocrlf = false
  safecrlf = true
  precomposeunicode = true

[i18n]
  commitencoding = UTF-8

[credential]
  helper = osxkeychain

[color]
  ui = true

[alias]
  log = log --date=local

  br = branch -v
  df = diff --color-words
  co = checkout
  ci = commit -v
  st = status
  sm = submodule
  lg = log --graph --pretty='format:%C(yellow)%h%Cblue%d%Creset %s %C(black)%an, %ar%Creset' --abbrev-commit --date=relative

  changed = "!sh -c 'git diff --stat $1 $1~' -"
  changes = diff --name-status
  fixup = commit --amend -C HEAD
  who-is = "!sh -c 'git log -i -1 --pretty=\"format:%an <%ae>\n\" --author=$1' -"
  what-is = show -s --pretty='tformat:%h (%s, %ad)' --date=short

  sm-pull = submodule foreach 'git pull origin master'
  sm-rm = "!sh -c '\
             if [ ! -z \"`git rev-parse --show-cdup`\" ]; then\n\
             echo "error: git-submodule can be run at top level of repository." >&2\n\
                 exit 1\n\
             fi\n\
             if [ ! -z \"`git diff HEAD -- .gitmodules`\" ]; then\n\
             echo \"error: .gitmodules is dirty. please commit or junk its hunk.\" >&2\n\
                 exit 1\n\
             fi\n\
             if [ $# -eq 0 ]; then\n\
             echo \"Usage: $(basename $0) {submodule}\" >&2\n\
                 exit 1\n\
             fi\n\
             name=\"$1\"\n\
             git rm --cached `git config --file .gitmodules --get submodule.$name.path` &&\n\
             rm -r `git config --file .gitmodules --get submodule.$name.path` &&\n\
             git config --file .gitmodules --remove-section submodule.$name &&\n\
             git add .gitmodules\n\
          ' -"

[filter "lfs"]
  lean = git-lfs clean -- %f
  mudge = git-lfs smudge -- %f
  rocess = git-lfs filter-process
  equired = true
